//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameClient.Server {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerStats", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Models")]
    [System.SerializableAttribute()]
    public partial class PlayerStats : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GameClient.Server.MatchResult[] gameHistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid playerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int totalGamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int totalLossesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int totalWinsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float winLossRatioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GameClient.Server.MatchResult[] gameHistory {
            get {
                return this.gameHistoryField;
            }
            set {
                if ((object.ReferenceEquals(this.gameHistoryField, value) != true)) {
                    this.gameHistoryField = value;
                    this.RaisePropertyChanged("gameHistory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid playerId {
            get {
                return this.playerIdField;
            }
            set {
                if ((this.playerIdField.Equals(value) != true)) {
                    this.playerIdField = value;
                    this.RaisePropertyChanged("playerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int totalGames {
            get {
                return this.totalGamesField;
            }
            set {
                if ((this.totalGamesField.Equals(value) != true)) {
                    this.totalGamesField = value;
                    this.RaisePropertyChanged("totalGames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int totalLosses {
            get {
                return this.totalLossesField;
            }
            set {
                if ((this.totalLossesField.Equals(value) != true)) {
                    this.totalLossesField = value;
                    this.RaisePropertyChanged("totalLosses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int totalWins {
            get {
                return this.totalWinsField;
            }
            set {
                if ((this.totalWinsField.Equals(value) != true)) {
                    this.totalWinsField = value;
                    this.RaisePropertyChanged("totalWins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float winLossRatio {
            get {
                return this.winLossRatioField;
            }
            set {
                if ((this.winLossRatioField.Equals(value) != true)) {
                    this.winLossRatioField = value;
                    this.RaisePropertyChanged("winLossRatio");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchResult", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Models")]
    [System.SerializableAttribute()]
    public partial class MatchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime gameEndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime gameStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GameClient.Server.GameType gameTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] playersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid winnerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime gameEndTime {
            get {
                return this.gameEndTimeField;
            }
            set {
                if ((this.gameEndTimeField.Equals(value) != true)) {
                    this.gameEndTimeField = value;
                    this.RaisePropertyChanged("gameEndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime gameStartTime {
            get {
                return this.gameStartTimeField;
            }
            set {
                if ((this.gameStartTimeField.Equals(value) != true)) {
                    this.gameStartTimeField = value;
                    this.RaisePropertyChanged("gameStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GameClient.Server.GameType gameType {
            get {
                return this.gameTypeField;
            }
            set {
                if ((this.gameTypeField.Equals(value) != true)) {
                    this.gameTypeField = value;
                    this.RaisePropertyChanged("gameType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] players {
            get {
                return this.playersField;
            }
            set {
                if ((object.ReferenceEquals(this.playersField, value) != true)) {
                    this.playersField = value;
                    this.RaisePropertyChanged("players");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid winnerId {
            get {
                return this.winnerIdField;
            }
            set {
                if ((this.winnerIdField.Equals(value) != true)) {
                    this.winnerIdField = value;
                    this.RaisePropertyChanged("winnerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameType", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Models")]
    public enum GameType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TicTacToe = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Checkers = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chess = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameServerFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GameClient.Server.UsernameAlreadyExistsFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GameClient.Server.InvalidUsernameFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GameClient.Server.InvalidPasswordFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GameClient.Server.PlayerNotInSpecifiedGameFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GameClient.Server.WaitingForPlayersFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GameClient.Server.GameIsOverFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GameClient.Server.NotPlayersTurnFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GameClient.Server.InvalidPlayerMoveFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GameClient.Server.EmptyResultsFault))]
    public partial class GameServerFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsernameAlreadyExistsFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
    [System.SerializableAttribute()]
    public partial class UsernameAlreadyExistsFault : GameClient.Server.GameServerFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidUsernameFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
    [System.SerializableAttribute()]
    public partial class InvalidUsernameFault : GameClient.Server.GameServerFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidPasswordFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
    [System.SerializableAttribute()]
    public partial class InvalidPasswordFault : GameClient.Server.GameServerFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerNotInSpecifiedGameFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
    [System.SerializableAttribute()]
    public partial class PlayerNotInSpecifiedGameFault : GameClient.Server.GameServerFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WaitingForPlayersFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
    [System.SerializableAttribute()]
    public partial class WaitingForPlayersFault : GameClient.Server.GameServerFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameIsOverFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
    [System.SerializableAttribute()]
    public partial class GameIsOverFault : GameClient.Server.GameServerFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotPlayersTurnFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
    [System.SerializableAttribute()]
    public partial class NotPlayersTurnFault : GameClient.Server.GameServerFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidPlayerMoveFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
    [System.SerializableAttribute()]
    public partial class InvalidPlayerMoveFault : GameClient.Server.GameServerFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmptyResultsFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
    [System.SerializableAttribute()]
    public partial class EmptyResultsFault : GameClient.Server.GameServerFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameInformation", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Models")]
    [System.SerializableAttribute()]
    public partial class GameInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GameClient.Server.GameType gameTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numberOfPlayersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GameClient.Server.GameType gameType {
            get {
                return this.gameTypeField;
            }
            set {
                if ((this.gameTypeField.Equals(value) != true)) {
                    this.gameTypeField = value;
                    this.RaisePropertyChanged("gameType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int numberOfPlayers {
            get {
                return this.numberOfPlayersField;
            }
            set {
                if ((this.numberOfPlayersField.Equals(value) != true)) {
                    this.numberOfPlayersField = value;
                    this.RaisePropertyChanged("numberOfPlayers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerProfile", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Models")]
    [System.SerializableAttribute()]
    public partial class PlayerProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchState", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Models")]
    [System.SerializableAttribute()]
    public partial class MatchState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime gameEndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime gameStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GameClient.Server.GameType gameTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GameClient.Server.TicTacToeState inGameStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GameClient.Server.GameOperationState operationStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid playerTurnIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] playersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid winnerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime gameEndTime {
            get {
                return this.gameEndTimeField;
            }
            set {
                if ((this.gameEndTimeField.Equals(value) != true)) {
                    this.gameEndTimeField = value;
                    this.RaisePropertyChanged("gameEndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime gameStartTime {
            get {
                return this.gameStartTimeField;
            }
            set {
                if ((this.gameStartTimeField.Equals(value) != true)) {
                    this.gameStartTimeField = value;
                    this.RaisePropertyChanged("gameStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GameClient.Server.GameType gameType {
            get {
                return this.gameTypeField;
            }
            set {
                if ((this.gameTypeField.Equals(value) != true)) {
                    this.gameTypeField = value;
                    this.RaisePropertyChanged("gameType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GameClient.Server.TicTacToeState inGameState {
            get {
                return this.inGameStateField;
            }
            set {
                if ((object.ReferenceEquals(this.inGameStateField, value) != true)) {
                    this.inGameStateField = value;
                    this.RaisePropertyChanged("inGameState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GameClient.Server.GameOperationState operationState {
            get {
                return this.operationStateField;
            }
            set {
                if ((this.operationStateField.Equals(value) != true)) {
                    this.operationStateField = value;
                    this.RaisePropertyChanged("operationState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid playerTurnId {
            get {
                return this.playerTurnIdField;
            }
            set {
                if ((this.playerTurnIdField.Equals(value) != true)) {
                    this.playerTurnIdField = value;
                    this.RaisePropertyChanged("playerTurnId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] players {
            get {
                return this.playersField;
            }
            set {
                if ((object.ReferenceEquals(this.playersField, value) != true)) {
                    this.playersField = value;
                    this.RaisePropertyChanged("players");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid winnerId {
            get {
                return this.winnerIdField;
            }
            set {
                if ((this.winnerIdField.Equals(value) != true)) {
                    this.winnerIdField = value;
                    this.RaisePropertyChanged("winnerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TicTacToeState", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Models")]
    [System.SerializableAttribute()]
    public partial class TicTacToeState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GameClient.Server.PlayerMark[] boardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid firstPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid secondPlayerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GameClient.Server.PlayerMark[] board {
            get {
                return this.boardField;
            }
            set {
                if ((object.ReferenceEquals(this.boardField, value) != true)) {
                    this.boardField = value;
                    this.RaisePropertyChanged("board");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid firstPlayer {
            get {
                return this.firstPlayerField;
            }
            set {
                if ((this.firstPlayerField.Equals(value) != true)) {
                    this.firstPlayerField = value;
                    this.RaisePropertyChanged("firstPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid secondPlayer {
            get {
                return this.secondPlayerField;
            }
            set {
                if ((this.secondPlayerField.Equals(value) != true)) {
                    this.secondPlayerField = value;
                    this.RaisePropertyChanged("secondPlayer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameOperationState", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Models")]
    public enum GameOperationState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingForPlayers = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProgress = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerMark", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Models.TicTacToe")]
    public enum PlayerMark : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Empty = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        X = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        O = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MovePosition", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Models.TicTacToe")]
    public enum MovePosition : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TopLeft = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TopCenter = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TopRight = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiddleLeft = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiddleCenter = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiddleRight = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BottomLeft = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BottomCenter = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BottomRight = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Server.IInformationService")]
    public interface IInformationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInformationService/GetPlayerStats", ReplyAction="http://tempuri.org/IInformationService/GetPlayerStatsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GameClient.Server.EmptyResultsFault), Action="http://tempuri.org/IInformationService/GetPlayerStatsEmptyResultsFaultFault", Name="EmptyResultsFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
        GameClient.Server.PlayerStats GetPlayerStats(System.Guid playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInformationService/GetPlayerStats", ReplyAction="http://tempuri.org/IInformationService/GetPlayerStatsResponse")]
        System.Threading.Tasks.Task<GameClient.Server.PlayerStats> GetPlayerStatsAsync(System.Guid playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInformationService/GetGameList", ReplyAction="http://tempuri.org/IInformationService/GetGameListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GameClient.Server.EmptyResultsFault), Action="http://tempuri.org/IInformationService/GetGameListEmptyResultsFaultFault", Name="EmptyResultsFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
        GameClient.Server.GameInformation[] GetGameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInformationService/GetGameList", ReplyAction="http://tempuri.org/IInformationService/GetGameListResponse")]
        System.Threading.Tasks.Task<GameClient.Server.GameInformation[]> GetGameListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInformationService/CreatePlayerAccount", ReplyAction="http://tempuri.org/IInformationService/CreatePlayerAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GameClient.Server.UsernameAlreadyExistsFault), Action="http://tempuri.org/IInformationService/CreatePlayerAccountUsernameAlreadyExistsFa" +
            "ultFault", Name="UsernameAlreadyExistsFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
        void CreatePlayerAccount(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInformationService/CreatePlayerAccount", ReplyAction="http://tempuri.org/IInformationService/CreatePlayerAccountResponse")]
        System.Threading.Tasks.Task CreatePlayerAccountAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInformationService/LoginPlayer", ReplyAction="http://tempuri.org/IInformationService/LoginPlayerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GameClient.Server.InvalidUsernameFault), Action="http://tempuri.org/IInformationService/LoginPlayerInvalidUsernameFaultFault", Name="InvalidUsernameFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
        [System.ServiceModel.FaultContractAttribute(typeof(GameClient.Server.InvalidPasswordFault), Action="http://tempuri.org/IInformationService/LoginPlayerInvalidPasswordFaultFault", Name="InvalidPasswordFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
        GameClient.Server.PlayerProfile LoginPlayer(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInformationService/LoginPlayer", ReplyAction="http://tempuri.org/IInformationService/LoginPlayerResponse")]
        System.Threading.Tasks.Task<GameClient.Server.PlayerProfile> LoginPlayerAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInformationService/LoginGuest", ReplyAction="http://tempuri.org/IInformationService/LoginGuestResponse")]
        GameClient.Server.PlayerProfile LoginGuest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInformationService/LoginGuest", ReplyAction="http://tempuri.org/IInformationService/LoginGuestResponse")]
        System.Threading.Tasks.Task<GameClient.Server.PlayerProfile> LoginGuestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInformationService/LogoutPlayer", ReplyAction="http://tempuri.org/IInformationService/LogoutPlayerResponse")]
        void LogoutPlayer(System.Guid playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInformationService/LogoutPlayer", ReplyAction="http://tempuri.org/IInformationService/LogoutPlayerResponse")]
        System.Threading.Tasks.Task LogoutPlayerAsync(System.Guid playerId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInformationServiceChannel : GameClient.Server.IInformationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InformationServiceClient : System.ServiceModel.ClientBase<GameClient.Server.IInformationService>, GameClient.Server.IInformationService {
        
        public InformationServiceClient() {
        }
        
        public InformationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InformationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InformationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InformationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GameClient.Server.PlayerStats GetPlayerStats(System.Guid playerId) {
            return base.Channel.GetPlayerStats(playerId);
        }
        
        public System.Threading.Tasks.Task<GameClient.Server.PlayerStats> GetPlayerStatsAsync(System.Guid playerId) {
            return base.Channel.GetPlayerStatsAsync(playerId);
        }
        
        public GameClient.Server.GameInformation[] GetGameList() {
            return base.Channel.GetGameList();
        }
        
        public System.Threading.Tasks.Task<GameClient.Server.GameInformation[]> GetGameListAsync() {
            return base.Channel.GetGameListAsync();
        }
        
        public void CreatePlayerAccount(string username, string password) {
            base.Channel.CreatePlayerAccount(username, password);
        }
        
        public System.Threading.Tasks.Task CreatePlayerAccountAsync(string username, string password) {
            return base.Channel.CreatePlayerAccountAsync(username, password);
        }
        
        public GameClient.Server.PlayerProfile LoginPlayer(string username, string password) {
            return base.Channel.LoginPlayer(username, password);
        }
        
        public System.Threading.Tasks.Task<GameClient.Server.PlayerProfile> LoginPlayerAsync(string username, string password) {
            return base.Channel.LoginPlayerAsync(username, password);
        }
        
        public GameClient.Server.PlayerProfile LoginGuest() {
            return base.Channel.LoginGuest();
        }
        
        public System.Threading.Tasks.Task<GameClient.Server.PlayerProfile> LoginGuestAsync() {
            return base.Channel.LoginGuestAsync();
        }
        
        public void LogoutPlayer(System.Guid playerId) {
            base.Channel.LogoutPlayer(playerId);
        }
        
        public System.Threading.Tasks.Task LogoutPlayerAsync(System.Guid playerId) {
            return base.Channel.LogoutPlayerAsync(playerId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Server.IGameService")]
    public interface IGameService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/JoinGame", ReplyAction="http://tempuri.org/IGameService/JoinGameResponse")]
        GameClient.Server.MatchState JoinGame(GameClient.Server.GameType type, System.Guid playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/JoinGame", ReplyAction="http://tempuri.org/IGameService/JoinGameResponse")]
        System.Threading.Tasks.Task<GameClient.Server.MatchState> JoinGameAsync(GameClient.Server.GameType type, System.Guid playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/Quit", ReplyAction="http://tempuri.org/IGameService/QuitResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GameClient.Server.PlayerNotInSpecifiedGameFault), Action="http://tempuri.org/IGameService/QuitPlayerNotInSpecifiedGameFaultFault", Name="PlayerNotInSpecifiedGameFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
        [System.ServiceModel.FaultContractAttribute(typeof(GameClient.Server.EmptyResultsFault), Action="http://tempuri.org/IGameService/QuitEmptyResultsFaultFault", Name="EmptyResultsFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
        void Quit(System.Guid matchId, System.Guid playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/Quit", ReplyAction="http://tempuri.org/IGameService/QuitResponse")]
        System.Threading.Tasks.Task QuitAsync(System.Guid matchId, System.Guid playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/PlayerMove", ReplyAction="http://tempuri.org/IGameService/PlayerMoveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GameClient.Server.WaitingForPlayersFault), Action="http://tempuri.org/IGameService/PlayerMoveWaitingForPlayersFaultFault", Name="WaitingForPlayersFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
        [System.ServiceModel.FaultContractAttribute(typeof(GameClient.Server.GameIsOverFault), Action="http://tempuri.org/IGameService/PlayerMoveGameIsOverFaultFault", Name="GameIsOverFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
        [System.ServiceModel.FaultContractAttribute(typeof(GameClient.Server.PlayerNotInSpecifiedGameFault), Action="http://tempuri.org/IGameService/PlayerMovePlayerNotInSpecifiedGameFaultFault", Name="PlayerNotInSpecifiedGameFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
        [System.ServiceModel.FaultContractAttribute(typeof(GameClient.Server.NotPlayersTurnFault), Action="http://tempuri.org/IGameService/PlayerMoveNotPlayersTurnFaultFault", Name="NotPlayersTurnFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
        [System.ServiceModel.FaultContractAttribute(typeof(GameClient.Server.InvalidPlayerMoveFault), Action="http://tempuri.org/IGameService/PlayerMoveInvalidPlayerMoveFaultFault", Name="InvalidPlayerMoveFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
        [System.ServiceModel.FaultContractAttribute(typeof(GameClient.Server.EmptyResultsFault), Action="http://tempuri.org/IGameService/PlayerMoveEmptyResultsFaultFault", Name="EmptyResultsFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
        GameClient.Server.MatchState PlayerMove(System.Guid matchId, System.Guid playerId, GameClient.Server.MovePosition move);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/PlayerMove", ReplyAction="http://tempuri.org/IGameService/PlayerMoveResponse")]
        System.Threading.Tasks.Task<GameClient.Server.MatchState> PlayerMoveAsync(System.Guid matchId, System.Guid playerId, GameClient.Server.MovePosition move);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetMatchState", ReplyAction="http://tempuri.org/IGameService/GetMatchStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GameClient.Server.EmptyResultsFault), Action="http://tempuri.org/IGameService/GetMatchStateEmptyResultsFaultFault", Name="EmptyResultsFault", Namespace="http://schemas.datacontract.org/2004/07/GameServer.Utilities")]
        GameClient.Server.MatchState GetMatchState(System.Guid matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetMatchState", ReplyAction="http://tempuri.org/IGameService/GetMatchStateResponse")]
        System.Threading.Tasks.Task<GameClient.Server.MatchState> GetMatchStateAsync(System.Guid matchId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceChannel : GameClient.Server.IGameService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameServiceClient : System.ServiceModel.ClientBase<GameClient.Server.IGameService>, GameClient.Server.IGameService {
        
        public GameServiceClient() {
        }
        
        public GameServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GameServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GameClient.Server.MatchState JoinGame(GameClient.Server.GameType type, System.Guid playerId) {
            return base.Channel.JoinGame(type, playerId);
        }
        
        public System.Threading.Tasks.Task<GameClient.Server.MatchState> JoinGameAsync(GameClient.Server.GameType type, System.Guid playerId) {
            return base.Channel.JoinGameAsync(type, playerId);
        }
        
        public void Quit(System.Guid matchId, System.Guid playerId) {
            base.Channel.Quit(matchId, playerId);
        }
        
        public System.Threading.Tasks.Task QuitAsync(System.Guid matchId, System.Guid playerId) {
            return base.Channel.QuitAsync(matchId, playerId);
        }
        
        public GameClient.Server.MatchState PlayerMove(System.Guid matchId, System.Guid playerId, GameClient.Server.MovePosition move) {
            return base.Channel.PlayerMove(matchId, playerId, move);
        }
        
        public System.Threading.Tasks.Task<GameClient.Server.MatchState> PlayerMoveAsync(System.Guid matchId, System.Guid playerId, GameClient.Server.MovePosition move) {
            return base.Channel.PlayerMoveAsync(matchId, playerId, move);
        }
        
        public GameClient.Server.MatchState GetMatchState(System.Guid matchId) {
            return base.Channel.GetMatchState(matchId);
        }
        
        public System.Threading.Tasks.Task<GameClient.Server.MatchState> GetMatchStateAsync(System.Guid matchId) {
            return base.Channel.GetMatchStateAsync(matchId);
        }
    }
}
